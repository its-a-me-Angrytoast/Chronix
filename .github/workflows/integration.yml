name: Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  postgres-integration:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: chronix
          POSTGRES_PASSWORD: chronixpass
          POSTGRES_DB: chronix
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U chronix -d chronix" --health-interval=5s --health-timeout=5s --health-retries=20

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            . .venv/bin/activate
            python -c "import psycopg2, sys; import os; dsn=os.getenv('DATABASE_DSN', 'postgres://chronix:chronixpass@localhost:5432/chronix'); import urllib.parse as up; p=up.urlparse(dsn); import psycopg2; import time; \
            try: conn=psycopg2.connect(dbname=p.path.lstrip('/'), user=p.username, password=p.password, host=p.hostname, port=p.port); conn.close(); print('ok'); break
            except Exception as e: print('not ready', e); time.sleep(1)
          done

      - name: Apply schema
        env:
          PGPASSWORD: chronixpass
        run: |
          docker run --rm --network host postgres:15 bash -c "psql -h localhost -U chronix -d chronix -f /workspace/docs/schema.md" \
            || true

      - name: Run integration test
        env:
          DATABASE_DSN: postgres://chronix:chronixpass@localhost:5432/chronix
        run: |
          . .venv/bin/activate
          python scripts/integration_test_postgres.py
